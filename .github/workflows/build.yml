name: TWRP Recovery Build

on:
  workflow_dispatch:
    inputs:
      MANIFEST_URL:
        description: 'MANIFEST_URL'
        required: true
        default: 'https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp'
      MANIFEST_BRANCH:
        description: 'MANIFEST_BRANCH'
        required: true
        default: 'twrp-12.1'
      DEVICE_TREE_URL:
        description: 'DEVICE_TREE_URL'
        required: true
        default: 'https://github.com/ayusc/twrp-LXX503'
      DEVICE_TREE_BRANCH:
        description: 'DEVICE_TREE_BRANCH'
        required: true
        default: 'master'
      DEVICE_PATH:
        description: 'DEVICE_PATH'
        required: true
        default: 'device/lava/LXX503'
      DEVICE_NAME:
        description: 'DEVICE_NAME'
        required: true
        default: 'LXX503'
      MAKEFILE_NAME:
        description: 'MAKEFILE_NAME'
        required: true
        default: 'twrp_LXX503'
      BUILD_TARGET:
        description: 'BUILD_TARGET'
        required: true
        default: 'boot'

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    
    - name: Check Out
      uses: actions/checkout@v4
    
    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main

    - name: Setup ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        max-size: "10G"
        
    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 16

    - name: Prepare the environment
      run: |
        sudo apt update
        sudo apt -y upgrade
        sudo apt -y install gperf gcc-multilib gcc-10-multilib g++-multilib g++-10-multilib libc6-dev lib32ncurses5-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc bc ccache lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libwxgtk3.0-gtk3-dev libxml2 lzop pngcrush schedtool squashfs-tools imagemagick libbz2-dev lzma ncftp qemu-user-static libstdc++-10-dev libtinfo5 libgflags-dev
        sudo add-apt-repository universe
        sudo apt -y install libncurses5
        
    - name: Install OpenJDK
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '8'

    - name: Install repo
      run: |
        mkdir ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        sudo ln -sf ~/bin/repo /usr/bin/repo
      
    - name: Initialize repo
      run: |
        mkdir workspace
        cd workspace
        echo "workspace-folder=$(pwd)" >> $GITHUB_OUTPUT
        repo init --depth=1 -u ${{ github.event.inputs.MANIFEST_URL }} -b ${{ github.event.inputs.MANIFEST_BRANCH }}
      id: pwd
          
    - name: Repo Sync
      run: |
        repo sync -j$(nproc --all) --force-sync
      working-directory: workspace
      
    - name: Clone device tree
      run: |
        git clone ${{ github.event.inputs.DEVICE_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.DEVICE_PATH }}
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Building recovery
      run: |
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        lunch ${{ github.event.inputs.MAKEFILE_NAME }}-eng && make clean && make ${{ github.event.inputs.BUILD_TARGET }}image -j$(nproc --all)
        echo "---> Build Finished Successfully"
        echo "---> Preparing for Uploads..."
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}
      
    - run: |
        ls -R workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/
        mv workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/boot.img workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/twrp.img
        # mv workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/boot.zip workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/twrp.zip

    - name: Upload to Release
      uses: softprops/action-gh-release@v2
      with:
        files: | 
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/twrp.img
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/twrp.zip
        name: TWRP Recovery for Lava Blaze 5g (${{ github.event.inputs.DEVICE_NAME }})
        tag_name: ${{ github.run_id }}
        body: |
          Nightly TWRP Recovery release for Lava Blaze 5G (LXX503)
          Manifest: ${{ github.event.inputs.MANIFEST_BRANCH }}
          Device: ${{ github.event.inputs.DEVICE_NAME }}
          Target Image: twrp.img
          Taget Zip: twrp_flashable.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
